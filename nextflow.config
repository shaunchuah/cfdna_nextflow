import groovy.json.JsonSlurper
def JsonSlurper = new JsonSlurper()
azure_config = JsonSlurper.parse(new File("./credentials.json"))

executor {
  $local {
      cpus = 4
      memory = '16 GB'
  }
}

profiles {
    standard {
        process.executor = 'local'
        azure {
            storage {
                accountName = azure_config["storageAccountName"]
                accountKey = azure_config["storageAccountKey"]
            }
        }
    }
    gls {
        params.reads = 'gs://scgenomics/data/*/*_{R1,R2}_*.fastq.gz'
        params.outdir = 'gs://scgenomics/reports/'
        process.executor = 'google-lifesciences'
        workDir = 'gs://scgenomics/work'
        google.location = 'europe-west2'
        google.region  = 'europe-west2'
        google.project = 'nextflow-321415'
        google.lifeSciences.preemptible = true
        process.errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
        process.maxRetries = 3
    }
    az {
        params.reads = 'az://scgenomics/test_data/*/*_{R1,R2}_*.fastq.gz'
        params.outdir = 'az://scgenomics/test_reports'
        params.bowtie2_reference_index = "az://scgenomics/bt2_index.tar.gz"
        params.kraken2_db = "az://scgenomics/k2_standard_8gb_20210517.tar.gz"
        process.executor = 'azurebatch'
        workDir = 'az://scgenomics/work/'
        azure {
            storage {
                accountName = azure_config["storageAccountName"]
                accountKey = azure_config["storageAccountKey"]
            }
            batch {
                location = 'uksouth'
                accountName = azure_config["batchAccountName"]
                accountKey = azure_config["batchAccountKey"]
                autoPoolMode = true
                pools {
                    auto {
                        vmType = 'Standard_D16_v3'
                        maxVmCount = 3
                        autoScale = true
                    }
                }
            }
        }
    }
    az_prod {
        params.reads = 'az://scgenomics/data/*/*_{R1,R2}_*.fastq.gz'
        params.outdir = 'az://scgenomics/reports'
        params.bowtie2_reference_index = "az://scgenomics/bt2_index.tar.gz"
        params.kraken2_db = "az://scgenomics/k2_standard_20210517.tar.gz"
        process.executor = 'azurebatch'
        workDir = 'az://scgenomics/production_work/'
        azure {
            storage {
                accountName = azure_config["storageAccountName"]
                accountKey = azure_config["storageAccountKey"]
            }
            batch {
                location = 'uksouth'
                accountName = azure_config["batchAccountName"]
                accountKey = azure_config["batchAccountKey"]
                autoPoolMode = true
                pools {
                    auto {
                        vmType = 'Standard_D16_v3'
                        maxVmCount = 8
                        autoScale = true
                    }
                }
            }
        }
    }
}

docker {
    enabled = true
}

dag {
    enabled = false
    file = 'pipeline_dag.html'
}
