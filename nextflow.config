import groovy.json.JsonSlurper
def JsonSlurper = new JsonSlurper()
azure_config = JsonSlurper.parse(new File("./credentials.json"))

executor {
  $local {
      cpus = 4
      memory = '16 GB'
  }
}

profiles {
    standard {
        process.executor = 'local'
        azure {
            storage {
                accountName = azure_config["storageAccountName"]
                accountKey = azure_config["storageAccountKey"]
            }
        }
    }
    test {
        params.reads = 'az://scgenomics/test_data/*/*_{R1,R2}_*.fastq.gz'
        params.outdir = 'az://scgenomics/test_reports'
        params.bowtie2_reference_index = "az://scgenomics/GRCh38_noalt_as.tar.gz"
        params.bowtie2_mito_index = "az://scgenomics/human_mito_db.tar.gz"
        params.kraken2_db = "az://scgenomics/k2_standard_20210517.tar.gz"
        params.cpus = 16
        process.executor = 'azurebatch'
        workDir = 'az://scgenomics/test_work/'
        azure {
            storage {
                accountName = azure_config["storageAccountName"]
                accountKey = azure_config["storageAccountKey"]
            }
            batch {
                endpoint='https://shaunchuah.uksouth.batch.azure.com/'
                location = 'uksouth'
                accountName = azure_config["batchAccountName"]
                accountKey = azure_config["batchAccountKey"]
                autoPoolMode = true
                pools {
                    auto {
                        vmType = 'Standard_D16_v3'
                        maxVmCount = 8
                        autoScale = true
                        sku = "batch.node.ubuntu 20.04"
                        offer = "ubuntu-server-container"
                        publisher = "microsoft-azure-batch"
                    }
                }
            }
        }
    }
    production {
        params.reads = 'az://scgenomics/data/*/*_{R1,R2}_*.fastq.gz'
        params.outdir = 'az://scgenomics/reports_pipeline_v1.3'
        params.bowtie2_reference_index = "az://scgenomics/GRCh38_noalt_as.tar.gz"
        params.bowtie2_mito_index = "az://scgenomics/human_mito_db.tar.gz"
        params.kraken2_db = "az://scgenomics/k2_standard_20210517.tar.gz"
        params.cpus = 16
        process.executor = 'azurebatch'
        workDir = 'az://scgenomics/prod_work/'
        azure {
            storage {
                accountName = azure_config["storageAccountName"]
                accountKey = azure_config["storageAccountKey"]
            }
            batch {
                endpoint='https://shaunchuah.uksouth.batch.azure.com/'
                location = 'uksouth'
                accountName = azure_config["batchAccountName"]
                accountKey = azure_config["batchAccountKey"]
                autoPoolMode = true
                pools {
                    auto {
                        vmType = 'Standard_D16_v3'
                        maxVmCount = 8
                        autoScale = true
                        sku = "batch.node.ubuntu 20.04"
                        offer = "ubuntu-server-container"
                        publisher = "microsoft-azure-batch"
                    }
                }
            }
        }
    }
}

docker {
    enabled = true
}
